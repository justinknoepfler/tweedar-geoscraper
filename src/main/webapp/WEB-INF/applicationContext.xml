<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- twitter client bean -->
	<bean id="twitterClient" class="edu.umn.knoe0023.tweedar.stream.TwitterClient" />

	<!-- tweet filter bean -->
	<bean id="tweetFilter" class="edu.umn.knoe0023.tweedar.stream.TweetFilter" />

	<!-- jdbc insert generation bean -->
	<bean id="jsonToJdbc"
		class="edu.umn.knoe0023.tweedar.stream.JsonToJdbcExchangeTranslator" />

	<!-- JDBC data source  -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://us-cdbr-east-05.cleardb.net:3306/heroku_0a9d3796bfabb21" />
		<property name="username" value="b09735b8db0848" />
		<property name="password" value="7c1d1501" />
	</bean>

	<camelContext xmlns="http://camel.apache.org/schema/spring">

		<dataFormats>
			<json id="jackson" library="Jackson" />
		</dataFormats>

		<route id="tweedarGeo-startClient">
			<from uri="timer://foo?repeatCount=1" />
			<bean ref="twitterClient" method="start" />
			<bean ref="twitterClient" method="offloadMessageToStorage" />
		</route>

		<route id="tweedarGeo-sendTweetToDatabase">
			<from uri="seda://sendTweetToDatabase?concurrentConsumers=5" />
			<unmarshal ref="jackson" />
			<filter>
				<method ref="tweetFilter" method="process" />
				<bean ref="jsonToJdbc" method="translateTweetToJdbcInsertExchange" />
				<to uri="jdbc:dataSource" />
			</filter>
		</route>

	</camelContext>

</beans>
